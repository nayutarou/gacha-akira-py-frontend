@import "tailwindcss";


@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --result-A: #ff00ff; /* Purple */
    --result-B: #ffd700; /* Gold */
    --result-C: #ff0000; /* Red */
    --result-D: #0000ff; /* Blue */
    --result-X: #ffffff; /* White */
  }
}

.text-shadow-lg {
  text-shadow: 3px 3px 6px rgba(0, 0, 0, 0.5);
}

.animate-fadeInScale {
  animation: fadeInScale 0.5s ease-out forwards;
}

@keyframes fadeInScale {
  from {
    opacity: 0;
    transform: scale(0.8);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

.animate-gachaResult {
  animation: gachaResult 0.8s cubic-bezier(0.68, -0.55, 0.27, 1.55) forwards;
}

@keyframes gachaResult {
  0% {
    opacity: 0;
    transform: scale(0.5) rotateY(0deg);
  }
  50% {
    opacity: 1;
    transform: scale(1.2) rotateY(180deg);
  }
  100% {
    opacity: 1;
    transform: scale(1) rotateY(360deg);
  }
}

.firework {
  position: absolute;
  width: 10px;
  height: 10px;
  background-color: white;
  border-radius: 50%;
  opacity: 0;
  animation: firework-burst 2s ease-out forwards;
  transform: translate(-50%, -50%);
}

@keyframes firework-burst {
  0% {
    opacity: 1;
    transform: scale(0.2) translate(-50%, -50%);
  }
  100% {
    opacity: 0;
    transform: scale(1.5) translate(-50%, -50%);
  }
}

.firework::before,
.firework::after {
  content: "";
  position: absolute;
  width: 100%;
  height: 100%;
  background-color: inherit;
  border-radius: 50%;
}

.firework::before {
  transform: scale(0.7);
}

.firework::after {
  transform: scale(0.4);
}

/* Result specific styles */
.from-result-A {
  --tw-gradient-from: var(--result-A) var(--tw-gradient-from-position);
}
.to-result-A {
  --tw-gradient-to: var(--result-A) var(--tw-gradient-to-position);
}
.shadow-result-A {
  --tw-shadow-color: var(--result-A);
}

.from-result-B {
  --tw-gradient-from: var(--result-B) var(--tw-gradient-from-position);
}
.to-result-B {
  --tw-gradient-to: var(--result-B) var(--tw-gradient-to-position);
}
.shadow-result-B {
  --tw-shadow-color: var(--result-B);
}

.from-result-C {
  --tw-gradient-from: var(--result-C) var(--tw-gradient-from-position);
}
.to-result-C {
  --tw-gradient-to: var(--result-C) var(--tw-gradient-to-position);
}
.shadow-result-C {
  --tw-shadow-color: var(--result-C);
}

.from-result-D {
  --tw-gradient-from: var(--result-D) var(--tw-gradient-from-position);
}
.to-result-D {
  --tw-gradient-to: var(--result-D) var(--tw-gradient-to-position);
}
.shadow-result-D {
  --tw-shadow-color: var(--result-D);
}

.from-result-X {
  --tw-gradient-from: var(--result-X) var(--tw-gradient-from-position);
}
.to-result-X {
  --tw-gradient-to: var(--result-X) var(--tw-gradient-to-position);
}
.shadow-result-X {
  --tw-shadow-color: var(--result-X);
}

.gacha-background {
  background: radial-gradient(circle at center, #e0f7fa, #bbdefb);
}

.gacha-button {
  position: relative;
  overflow: hidden;
  transform: translateZ(0);
}

.gacha-button::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    120deg,
    transparent,
    rgba(255, 255, 255, 0.3),
    transparent
  );
  transition: all 0.6s cubic-bezier(0.165, 0.84, 0.44, 1);
}

.gacha-button:hover::before {
  left: 100%;
}

.gacha-button-clicked {
  animation: buttonClick 0.3s ease-in-out;
}

@keyframes buttonClick {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(0.95);
  }
  100% {
    transform: scale(1);
  }
}